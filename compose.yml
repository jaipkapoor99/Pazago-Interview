name: provue
services:
  postgres:
    image: postgres:17-alpine
    ports:
      - "${POSTGRES_HOST_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-pazago_dev}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/migrations/001_init.ddl.sql:/docker-entrypoint-initdb.d/001_init.sql:ro
      - ./db/seeds/001_seed.sql:/docker-entrypoint-initdb.d/002_seed.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastify-api:
    build:
      context: .
    command: npm run dev:fastify
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@provue-postgres:5432/pazago_dev}
      FASTIFY_PORT: ${FASTIFY_PORT:-3001}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "${FASTIFY_HOST_PORT:-3001}:3001"
    depends_on:
      provue-postgres:
        condition: service_healthy

  express-api:
    build:
      context: .
    command: npm run dev:express
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@provue-postgres:5432/pazago_dev}
      EXPRESS_PORT: ${EXPRESS_PORT:-4000}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "${EXPRESS_HOST_PORT:-4000}:4000"
    depends_on:
      provue-postgres:
        condition: service_healthy

volumes:
  pgdata:
