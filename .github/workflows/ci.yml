name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ["20.x", "22.x", "24.x"]
    env:
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache database init snapshot
        id: db-cache
        uses: actions/cache@v4
        with:
          path: .ci/db-init
          key: db-init-${{ hashFiles('db/migrations/**/*.sql', 'db/seeds/**/*.sql') }}

      - name: Verify migrations when cache misses
        if: matrix.node-version == '24.x' && steps.db-cache.outputs.cache-hit != 'true'
        run: |
          docker compose version
          docker compose up -d provue-postgres
          for i in {1..10}; do
            if docker compose exec -T provue-postgres pg_isready -U "${POSTGRES_USER:-postgres}"; then
              break
            fi
            sleep 2
          done
          docker compose down
          mkdir -p .ci/db-init
          date -u +"%Y-%m-%dT%H:%M:%SZ" > .ci/db-init/initialized.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Next.js build artifacts
        if: matrix.node-version == '24.x'
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json', 'next.config.js', 'tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Run format check
        if: matrix.node-version == '24.x'
        run: npm run format

      - name: Run lint
        run: npm run lint

      - name: Run unit tests
        if: matrix.node-version != '24.x'
        run: |
          set -o pipefail
          npm test -- --runInBand | tee jest-${{ matrix.node-version }}.log

      - name: Run unit tests with coverage
        if: matrix.node-version == '24.x'
        run: |
          set -o pipefail
          npm test -- --runInBand --coverage | tee jest-${{ matrix.node-version }}.log

      - name: Upload coverage and logs
        if: matrix.node-version == '24.x'
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.node-version }}
          path: |
            coverage
            jest-${{ matrix.node-version }}.log

      - name: Append coverage summary to job log
        if: matrix.node-version == '24.x'
        run: |
          node -e "const summary=require('./coverage/coverage-summary.json').total; const out=\`Statements: ${summary.statements.pct}%\\nBranches: ${summary.branches.pct}%\\nFunctions: ${summary.functions.pct}%\\nLines: ${summary.lines.pct}%\`; console.log(out);" >> "$GITHUB_STEP_SUMMARY"

      - name: Upload test log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jest-log-${{ matrix.node-version }}
          path: jest-${{ matrix.node-version }}.log
          if-no-files-found: ignore

      - name: Build project
        if: matrix.node-version == '24.x'
        run: npm run build
